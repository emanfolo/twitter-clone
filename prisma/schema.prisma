// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEPLOYMENT_DB")
  shadowDatabaseUrl = env("DEPLOYMENT_SHADOW_DB")
}

model User {
  id                       Int            @id @default(autoincrement())
  email                    String         @unique
  password                 String
  name                     String
  username                 String         @unique
  createdAt                DateTime       @default(now())
  updatedAt                DateTime       @updatedAt
  profile                  Profile?
  tweets                   Tweet[]
  retweets                 Retweet[]
  followedBy               User[]         @relation("UserFollows", references: [id])
  following                User[]         @relation("UserFollows", references: [id])
  likes                    Like[]
  mentions                 Mention[]
  notificationsReceived    Notification[] @relation("recipient")
  feedItems                FeedItem[]
  followNotificationsGiven Notification[] @relation("newFollow")
}

model Profile {
  id           Int     @id @default(autoincrement())
  image        String?
  header_image String?
  bio          String? @db.VarChar(280)
  userID       Int     @unique
  user         User    @relation(fields: [userID], references: [id])
}

model FeedItem {
  id        Int      @id @default(autoincrement())
  userID    Int
  user      User     @relation(fields: [userID], references: [id])
  type      String
  tweetID   Int?
  tweet     Tweet?   @relation(fields: [tweetID], references: [id])
  retweetID Int?     @unique
  retweet   Retweet? @relation(fields: [retweetID], references: [id])
  createdAt DateTime @default(now())
}

model Tweet {
  id                Int           @id @default(autoincrement())
  contents          String        @db.VarChar(280)
  createdAt         DateTime      @default(now())
  image             String?
  userID            Int
  user              User          @relation(fields: [userID], references: [id])
  hashtags          Hashtag[]     @relation(references: [id])
  likes             Like[]
  retweets          Retweet[]
  mentions          Mention[]     @relation(references: [id])
  threadSuccessorID Int?          @unique
  threadSuccessor   Tweet?        @relation("TweetReply", fields: [threadSuccessorID], references: [id])
  threadPredecessor Tweet?        @relation("TweetReply")
  notification      Notification?
  feedItems         FeedItem[]
}

model Retweet {
  id           Int           @id @default(autoincrement())
  userID       Int
  user         User          @relation(fields: [userID], references: [id])
  tweetID      Int
  tweet        Tweet         @relation(fields: [tweetID], references: [id])
  createdAt    DateTime      @default(now())
  notification Notification?
  feedItem     FeedItem?

  @@unique([userID, tweetID], name: "TweetRetweetUserID")
}

model Hashtag {
  id       Int     @id @default(autoincrement())
  contents String  @unique
  tweets   Tweet[] @relation(references: [id])
}

model Like {
  id           Int           @id @default(autoincrement())
  userID       Int
  user         User          @relation(fields: [userID], references: [id])
  tweetID      Int
  tweet        Tweet         @relation(fields: [tweetID], references: [id])
  createdAt    DateTime      @default(now())
  notification Notification?

  @@unique([userID, tweetID], name: "TweetLikeUserID")
}

model Mention {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  user         User          @relation(fields: [username], references: [username])
  tweets       Tweet[]       @relation(references: [id])
  notification Notification?
}

model Notification {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  recipientID Int
  recipient   User     @relation("recipient", fields: [recipientID], references: [id])
  type        String
  mentionID   Int?     @unique
  mention     Mention? @relation(fields: [mentionID], references: [id])
  likeID      Int?     @unique
  like        Like?    @relation(fields: [likeID], references: [id])
  retweetID   Int?     @unique
  retweet     Retweet? @relation(fields: [retweetID], references: [id])
  replyID     Int?     @unique
  reply       Tweet?   @relation(fields: [replyID], references: [id])
  followID    Int?
  follow      User?    @relation("newFollow", fields: [followID], references: [id])

    @@unique([followID, recipientID], name: "newFollowID")

}
